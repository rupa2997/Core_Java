59.	Create a class Voter(voterId, name, age) with parameterized constructor.  The parameterized constructor should throw a checked exception if age is less than 18. The message of exception is “invalid age for voter ”
package a3;
import java.util.Scanner;
class voter{
	int voterId;
	String name;
	int age;
	voter(){}
	voter(int voterId,String name,int age){
		this.voterId=voterId;
		this.name=name;
		this.age=age;
	}
	
	void display() {
		System.out.println("voter " + voterId + " name=" + name + " age=" + age );
	}
	
}
 

class invalidAgeException extends Exception {
	invalidAgeException(String msg){
		super(msg);
	}
}
public class Q59 {

	public static void main(String[] args) throws invalidAgeException{
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Age:");
		int a=sc.nextInt();
		if(a > 18) {
			System.out.println("Enter Name:");
			String nm=sc.next();
			System.out.println("Enter Voter id:");
			int vi=sc.nextInt();
			voter v=new voter(vi,nm,a);
			v.display();
    		
    	}
    	else {
    		throw new invalidAgeException("Not Eligible for voting");
    	}

		
	}
     
}


 
60.	Create Interface StudentFee and declare following method.  getFee() throws InvalidFeeException. This method ask fees from user and throws exception if user enters invalid or negative fees Create class Student with members (name, fees) and implement the StudentFee Interface.
package a3;
/*Create Interface StudentFee and declare following method.  getFee() throws 
 * InvalidFeeException. This method ask fees from user and throws exception 
 * if user enters invalid or negative fees Create class Student with members 
 * (name, fees) and implement the StudentFee Interface.*/
import java.util.Scanner;
 interface StudentFee{
	public abstract double getFee();
}
 class Student implements StudentFee{
	 String name;
	 double fee;
	 Student(){}
	 Student(String name,double fee){
		 this.name=name;
		 this.fee=fee;
	 }
	 public double getFee() {
		 return fee;
	 }
	 void display() {
		 System.out.println("Name:"+name+" Fees "+fee);
	 }
	 
 }
 class invalidSalaryException extends Exception{
	 invalidSalaryException(){
		 super("Inavlid fees");
	 }
 }
 
public class Q60 {

	public static void main(String[] args)throws invalidSalaryException {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Name, and Fees:");
		String name=sc.next();
		double dd=sc.nextDouble();
		Student s=new Student(name,dd);
		double f=s.getFee();
		if(f>10000) {
			//System.out.println("The fees is"+f);
			s.display();
		}
		else {
			throw new invalidSalaryException();
		}
		

	}

}


61.	Create a Thread class to print following star (*) pattern on screen with delay of 1 second between each * print. Number of lines in the pattern should be passed to the constructor of Thread class.  *  * * * *  * * * * * * * * * * Use this class in main method and ask user to enter number of lines to print.
62.	Create a class that checks whether a given number is prime or not using  Runnable interface.
63.	Write a program to count how many times character ‘t’ occurs in a file. 
64.	Write a program to count no of words in a text file and average word size.
65.	Write a program to count number of bytes in a image file(jpeg/png/gif).  Also find how much time it will take to upload the file on server if internet speed is 256 bps(bits per second).
66.	Write a program to store your shopping details in a binary file(shopping.dat) with information itemName, price, quantity. (Use ObjectOutputStream to store Item class object ).
67.	Write a program to read data from shopping.dat file creted in above problem and find total money spent on all shopping items. . (Use ObjectInputStream to read Item class object).
